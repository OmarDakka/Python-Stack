Microsoft Windows [Version 10.0.19042.928]
(c) Microsoft Corporation. All rights reserved.

C:\python_stack>cd my_environments

C:\python_stack\my_environments>call djangoPy3Env/Scripts/activate

(djangoPy3Env) C:\python_stack\my_environments>cd ..

(djangoPy3Env) C:\python_stack>cd django

(djangoPy3Env) C:\python_stack\django>cd django_intro

(djangoPy3Env) C:\python_stack\django\django_intro>django-admin startproject dojo_ninjas_proj

(djangoPy3Env) C:\python_stack\django\django_intro>cd dojo_ninjas_proj

(djangoPy3Env) C:\python_stack\django\django_intro\dojo_ninjas_proj>django-admin startapp dojo_ninjas_app

(djangoPy3Env) C:\python_stack\django\django_intro\dojo_ninjas_proj>code .

(djangoPy3Env) C:\python_stack\django\django_intro\dojo_ninjas_proj>python manage.py makemigrations
Traceback (most recent call last):
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\urls\resolvers.py", line 581, in url_patterns
    iter(patterns)
TypeError: 'module' object is not iterable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\python_stack\django\django_intro\dojo_ninjas_proj\manage.py", line 21, in <module>
    main()
  File "C:\python_stack\django\django_intro\dojo_ninjas_proj\manage.py", line 17, in main
    execute_from_command_line(sys.argv)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\__init__.py", line 381, in execute_from_command_line
    utility.execute()
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\__init__.py", line 375, in execute
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\base.py", line 323, in run_from_argv
    self.execute(*args, **cmd_options)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\base.py", line 361, in execute
    self.check()
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\base.py", line 387, in check
    all_issues = self._run_checks(
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\base.py", line 377, in _run_checks
    return checks.run_checks(**kwargs)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\checks\registry.py", line 72, in run_checks
    new_errors = check(app_configs=app_configs)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\checks\urls.py", line 13, in check_url_config
    return check_resolver(resolver)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\checks\urls.py", line 23, in check_resolver
    return check_method()
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\urls\resolvers.py", line 399, in check
    messages.extend(check_resolver(pattern))
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\checks\urls.py", line 23, in check_resolver
    return check_method()
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\urls\resolvers.py", line 398, in check
    for pattern in self.url_patterns:
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\utils\functional.py", line 80, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\urls\resolvers.py", line 588, in url_patterns
    raise ImproperlyConfigured(msg.format(name=self.urlconf_name))
django.core.exceptions.ImproperlyConfigured: The included URLconf '<module 'dojo_ninjas_app.urls' from 'C:\\python_stack\\django\\django_intro\\dojo_ninjas_proj\\dojo_ninjas_app\\urls.py'>' does not appear to have any patterns in it. If you see valid patterns in the file then the issue is probably caused by a circular import.

(djangoPy3Env) C:\python_stack\django\django_intro\dojo_ninjas_proj>python manage.py makemigrations
Migrations for 'dojo_ninjas_app':
  dojo_ninjas_app\migrations\0001_initial.py
    - Create model Dojo
    - Create model Ninja

(djangoPy3Env) C:\python_stack\django\django_intro\dojo_ninjas_proj>python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, dojo_ninjas_app, sessions
Running migrations:
  Applying contenttypes.0001_initial... OK
  Applying auth.0001_initial... OK
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying admin.0003_logentry_add_action_flag_choices... OK
  Applying contenttypes.0002_remove_content_type_name... OK
  Applying auth.0002_alter_permission_name_max_length... OK
  Applying auth.0003_alter_user_email_max_length... OK
  Applying auth.0004_alter_user_username_opts... OK
  Applying auth.0005_alter_user_last_login_null... OK
  Applying auth.0006_require_contenttypes_0002... OK
  Applying auth.0007_alter_validators_add_error_messages... OK
  Applying auth.0008_alter_user_username_max_length... OK
  Applying auth.0009_alter_user_last_name_max_length... OK
  Applying auth.0010_alter_group_name_max_length... OK
  Applying auth.0011_update_proxy_permissions... OK
  Applying dojo_ninjas_app.0001_initial... OK
  Applying sessions.0001_initial... OK

(djangoPy3Env) C:\python_stack\django\django_intro\dojo_ninjas_proj>python manage.py shell
Python 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from dojo_ninjas_app.models import *
>>> Dojo.objects.create(name = "First Dojo", city = "Indinapolis", state="Indiana")
<Dojo: Dojo object (1)>
>>> Dojo.objects.create(name = "Second Dojo", city = "Ramallah", state="Palestine")
<Dojo: Dojo object (2)>
>>> Dojo.objects.create(name = "Third Dojo", city = "Los Angeles", state="California")
<Dojo: Dojo object (3)>
>>> c = Dojo.objects.get(id=1)
>>> print(c)
Dojo object (1)
>>> print(c.name)
First Dojo
>>> c.delete()
(1, {'dojo_ninjas_app.Ninja': 0, 'dojo_ninjas_app.Dojo': 1})
>>> print(c)
Dojo object (None)
>>> c = Dojo.objects.get(id=2)
>>> c.delete()
(1, {'dojo_ninjas_app.Ninja': 0, 'dojo_ninjas_app.Dojo': 1})
>>> print(c)
Dojo object (None)
>>> c = Dojo.objects.get(id=3)
>>> c.delete()
(1, {'dojo_ninjas_app.Ninja': 0, 'dojo_ninjas_app.Dojo': 1})
>>> Dojo.objects.all().values()
<QuerySet []>
>>> Dojo.objects.create(name = "First Dojo", city = "Indinapolis", state="Indiana")
<Dojo: Dojo object (4)>
>>> Dojo.objects.create(name = "Second Dojo", city = "Ramallah", state="Palestine")
<Dojo: Dojo object (5)>
>>> Dojo.objects.create(name = "Third Dojo", city = "Los Angeles", state="California")
<Dojo: Dojo object (6)>
>>> first_dojo = Dojo.objects.get(id=4)
>>> print(first_dojo)
Dojo object (4)
>>> Ninja.object.create(first_name = "Omar", last_name = "Daqah", dojo = first_dojo)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: type object 'Ninja' has no attribute 'object'
>>> Ninja.objects.create(first_name = "Omar", last_name = "Daqah", dojo = first_dojo)
<Ninja: Ninja object (1)>
>>> Ninja.objects.create(first_name = "Yazan", last_name = "Salameh", dojo = first_dojo)
<Ninja: Ninja object (2)>
>>> Ninja.objects.create(first_name = "Ibraheem", last_name = "Shweiki", dojo = first_dojo)
<Ninja: Ninja object (3)>
>>> second_dojo=Dojo.objects.get(id=5)
>>> print(second_dojo)
Dojo object (5)
>>> Ninja.objects.create(first_name = "Mustafa", last_name = "Musleh", dojo = second_dojo)
<Ninja: Ninja object (4)>
>>> Ninja.objects.create(first_name = "Mahmoud", last_name = "Musleh", dojo = second_dojo)
<Ninja: Ninja object (5)>
>>> Ninja.objects.create(first_name = "Khattab", last_name = "Qadah", dojo = second_dojo)
<Ninja: Ninja object (6)>
>>> third_dojo = Dojo.objects.get(id=6)
>>> Ninja.objects.create(first_name = "Kareem", last_name = "Daqah", dojo = third_dojo)
<Ninja: Ninja object (7)>
>>> Ninja.objects.create(first_name = "Mohammad", last_name = "Fitiani", dojo = third_dojo)
<Ninja: Ninja object (8)>
>>> Ninja.objects.create(first_name = "Ibrahim", last_name = "Rabah", dojo = third_dojo)
<Ninja: Ninja object (9)>
>>> first_dojo.ninjas
<django.db.models.fields.related_descriptors.create_reverse_many_to_one_manager.<locals>.RelatedManager object at 0x00000182835C18E0>
>>> first_dojo.ninjas.all()
<QuerySet [<Ninja: Ninja object (1)>, <Ninja: Ninja object (2)>, <Ninja: Ninja object (3)>]>
>>> first_dojo.ninjas.all().values()
<QuerySet [{'id': 1, 'first_name': 'Omar', 'last_name': 'Daqah', 'dojo_id': 4, 'created_at': datetime.datetime(2021, 5, 23, 11, 3, 9, 449603, tzinfo=<UTC>), 'updated_at': datetime.datetime(2021, 5, 23, 11, 3, 9, 449603, tzinfo=<UTC>)}, {'id': 2, 'first_name': 'Yazan', 'last_name': 'Salameh', 'dojo_id': 4, 'created_at': datetime.datetime(2021, 5, 23, 11, 3, 21, 190320, tzinfo=<UTC>), 'updated_at': datetime.datetime(2021, 5, 23, 11, 3, 21, 190320, tzinfo=<UTC>)}, {'id': 3, 'first_name': 'Ibraheem', 'last_name': 'Shweiki', 'dojo_id': 4, 'created_at': datetime.datetime(2021, 5, 23, 11, 3, 34, 192199, tzinfo=<UTC>), 'updated_at': datetime.datetime(2021, 5, 23, 11, 3, 34, 193198, tzinfo=<UTC>)}]>
>>> second_dojo.ninjas.all().values()
<QuerySet [{'id': 4, 'first_name': 'Mustafa', 'last_name': 'Musleh', 'dojo_id': 5, 'created_at': datetime.datetime(2021, 5, 23, 11, 7, 30, 206161, tzinfo=<UTC>), 'updated_at': datetime.datetime(2021, 5, 23, 11, 7, 30, 206161, tzinfo=<UTC>)}, {'id': 5, 'first_name': 'Mahmoud', 'last_name': 'Musleh', 'dojo_id': 5, 'created_at': datetime.datetime(2021, 5, 23, 11, 7, 42, 131660, tzinfo=<UTC>), 'updated_at': datetime.datetime(2021, 5, 23, 11, 7, 42, 131660, tzinfo=<UTC>)}, {'id': 6, 'first_name': 'Khattab', 'last_name': 'Qadah', 'dojo_id': 5, 'created_at': datetime.datetime(2021, 5, 23, 11, 8, 4, 118615, tzinfo=<UTC>), 'updated_at': datetime.datetime(2021, 5, 23, 11, 8, 4, 118615, tzinfo=<UTC>)}]>
>>> third_dojo.ninjas.all().values()
<QuerySet [{'id': 7, 'first_name': 'Kareem', 'last_name': 'Daqah', 'dojo_id': 6, 'created_at': datetime.datetime(2021, 5, 23, 11, 10, 37, 707069, tzinfo=<UTC>), 'updated_at': datetime.datetime(2021, 5, 23, 11, 10, 37, 707069, tzinfo=<UTC>)}, {'id': 8, 'first_name': 'Mohammad', 'last_name': 'Fitiani', 'dojo_id': 6, 'created_at': datetime.datetime(2021, 5, 23, 11, 10, 54, 746016, tzinfo=<UTC>), 'updated_at': datetime.datetime(2021, 5, 23, 11, 10, 54, 746016, tzinfo=<UTC>)}, {'id': 9, 'first_name': 'Ibrahim', 'last_name': 'Rabah', 'dojo_id': 6, 'created_at': datetime.datetime(2021, 5, 23, 11, 11, 7, 327610, tzinfo=<UTC>), 'updated_at': datetime.datetime(2021, 5, 23, 11, 11, 7, 327610, tzinfo=<UTC>)}]>
>>> first_dojo.ninjas.firstname
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'RelatedManager' object has no attribute 'firstname'
>>> first_dojo.ninjas.first_name
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'RelatedManager' object has no attribute 'first_name'
>>> for ninjas in first_dojo.ninjas.all():
... print(Ninja.first_name, Ninja.last_name)
  File "<console>", line 2
    print(Ninja.first_name, Ninja.last_name)
    ^
IndentationError: expected an indented block
>>> for ninjas in first_dojo.ninjas.all():
...     print(Ninja.first_name, Ninja.last_name)
...
<django.db.models.query_utils.DeferredAttribute object at 0x00000182834D2340> <django.db.models.query_utils.DeferredAttribute object at 0x00000182834D23A0>
<django.db.models.query_utils.DeferredAttribute object at 0x00000182834D2340> <django.db.models.query_utils.DeferredAttribute object at 0x00000182834D23A0>
<django.db.models.query_utils.DeferredAttribute object at 0x00000182834D2340> <django.db.models.query_utils.DeferredAttribute object at 0x00000182834D23A0>
>>> for ninjas in first_dojo.ninjas.all():
...     print(Ninja.first_name)
...
<django.db.models.query_utils.DeferredAttribute object at 0x00000182834D2340>
<django.db.models.query_utils.DeferredAttribute object at 0x00000182834D2340>
<django.db.models.query_utils.DeferredAttribute object at 0x00000182834D2340>
>>> for ninja in first_dojo.ninjas.all():
...     print(Ninja.first_name)
...
<django.db.models.query_utils.DeferredAttribute object at 0x00000182834D2340>
<django.db.models.query_utils.DeferredAttribute object at 0x00000182834D2340>
<django.db.models.query_utils.DeferredAttribute object at 0x00000182834D2340>
>>> for ninjas in first_dojo.ninjas.all():
...     print(ninjas.first_name, ninja.last_name)
...
Omar Shweiki
Yazan Shweiki
Ibraheem Shweiki
>>> for ninjas in first_dojo.ninjas.all():
...     print(ninjas.last_name)
...
Daqah
Salameh
Shweiki
>>> for ninjas in second_dojo.ninjas.all():
...     print(ninjas.first_name)
...
Mustafa
Mahmoud
Khattab
>>> for ninjas in third_dojo.ninjas.all():
...     print(ninjas.first_name)
...
Kareem
Mohammad
Ibrahim
>>> Ninja.objects.last()
<Ninja: Ninja object (9)>
>>> Ninja.objects.last().dojo
<Dojo: Dojo object (6)>
>>> Ninja.objects.last().dojo.name
'Third Dojo'
>>> exit()

(djangoPy3Env) C:\python_stack\django\django_intro\dojo_ninjas_proj>python manage.py makemigrations
No changes detected

(djangoPy3Env) C:\python_stack\django\django_intro\dojo_ninjas_proj>python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, dojo_ninjas_app, sessions
Running migrations:
  No migrations to apply.

(djangoPy3Env) C:\python_stack\django\django_intro\dojo_ninjas_proj>python manage.py makemigrations
Migrations for 'dojo_ninjas_app':
  dojo_ninjas_app\migrations\0002_dojo_desc.py
    - Add field desc to dojo

(djangoPy3Env) C:\python_stack\django\django_intro\dojo_ninjas_proj>python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, dojo_ninjas_app, sessions
Running migrations:
  Applying dojo_ninjas_app.0002_dojo_desc... OK

(djangoPy3Env) C:\python_stack\django\django_intro\dojo_ninjas_proj>python manage.py shell
Python 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> Dojo.objects.create(name="Fourth Dojo", city="Las Vegas", state="I dont even know", desc="New Dojo")
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'Dojo' is not defined
>>> from dojo_ninjas_app import *
>>> Dojo.objects.create(name="Fourth Dojo", city="Las Vegas", state="I dont even know", desc="New Dojo")
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'Dojo' is not defined
>>> print(Dojo.objects.all())
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'Dojo' is not defined
>>> from dojo_ninjas_app.models import *
>>> Dojo.objects.create(name="Fourth Dojo", city="Las Vegas", state="I dont even know", desc="New Dojo")
<Dojo: Dojo object (7)>
>>>